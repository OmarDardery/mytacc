{"ast":null,"code":"const validateStudentId=async id=>{try{const response=await fetch(`/api/validate/${id}/`,{method:'GET',// GET request\nheaders:{'Content-Type':'application/json'// Let the backend know you're sending JSON data\n}});if(!response.ok){// If HTTP response is not OK (status is not 2xx)\nthrow new Error(`HTTP error! Status: ${response.status}`);}const data=await response.json();// Parse JSON response\nif(data.status==='success'){console.log('Validation successful:',data.message);}else{console.error('Validation failed:',data.message);}}catch(error){// Handle network or other errors\nconsole.error('Error during validation request:',error.message);}};export default validateStudentId;","map":{"version":3,"names":["validateStudentId","id","response","fetch","method","headers","ok","Error","status","data","json","console","log","message","error"],"sources":["C:/student-database/templates/liasu/src/component/functions/validate_student_id.js"],"sourcesContent":["const validateStudentId = async (id) => {\r\n  try {\r\n    const response = await fetch(`/api/validate/${id}/`, {\r\n      method: 'GET', // GET request\r\n      headers: {\r\n        'Content-Type': 'application/json', // Let the backend know you're sending JSON data\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      // If HTTP response is not OK (status is not 2xx)\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json(); // Parse JSON response\r\n    if (data.status === 'success') {\r\n      console.log('Validation successful:', data.message);\r\n    } else {\r\n      console.error('Validation failed:', data.message);\r\n    }\r\n  } catch (error) {\r\n    // Handle network or other errors\r\n    console.error('Error during validation request:', error.message);\r\n  }\r\n};\r\n\r\nexport default validateStudentId;"],"mappings":"AAAA,KAAM,CAAAA,iBAAiB,CAAG,KAAO,CAAAC,EAAE,EAAK,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iBAAiBF,EAAE,GAAG,CAAE,CACnDG,MAAM,CAAE,KAAK,CAAE;AACfC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAoB;AACtC,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB;AACA,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC,CAC3D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAE;AACpC,GAAID,IAAI,CAACD,MAAM,GAAK,SAAS,CAAE,CAC7BG,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEH,IAAI,CAACI,OAAO,CAAC,CACrD,CAAC,IAAM,CACLF,OAAO,CAACG,KAAK,CAAC,oBAAoB,CAAEL,IAAI,CAACI,OAAO,CAAC,CACnD,CACF,CAAE,MAAOC,KAAK,CAAE,CACd;AACAH,OAAO,CAACG,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAACD,OAAO,CAAC,CAClE,CACF,CAAC,CAED,cAAe,CAAAb,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}