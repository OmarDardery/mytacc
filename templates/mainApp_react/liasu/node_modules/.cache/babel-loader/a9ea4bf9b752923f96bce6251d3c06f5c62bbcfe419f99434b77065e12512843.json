{"ast":null,"code":"async function validateUser(username,password){try{const response=await fetch(`/api/auth/`,{method:'POST',headers:{'Content-Type':'application/json'// Let the backend know you're sending JSON data\n},body:JSON.stringify({username,password})// Send the ID in the request body\n});if(!response.ok){// If HTTP response is not OK (status is not 2xx)\nthrow new Error(`HTTP error! Status: ${response.status}`);}return await response.json();// Parse JSON response\n}catch(error){// Handle network or other errors\nconsole.error('Error during validation request:',error.message);return{authenticated:false,message:error.message};// Return an object with authentication status and error message\n}}export default validateUser;","map":{"version":3,"names":["validateUser","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","error","console","message","authenticated"],"sources":["C:/mytacc/templates/mainApp/liasu/src/component/functions/validateUser.js"],"sourcesContent":["async function validateUser(username, password) {\r\n  try {\r\n    const response = await fetch(`/api/auth/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', // Let the backend know you're sending JSON data\r\n      },\r\n      body: JSON.stringify({ username, password }), // Send the ID in the request body\r\n    });\r\n\r\n    if (!response.ok) {\r\n      // If HTTP response is not OK (status is not 2xx)\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json(); // Parse JSON response\r\n\r\n  } catch (error) {\r\n    // Handle network or other errors\r\n    console.error('Error during validation request:', error.message);\r\n    return { authenticated: false, message: error.message }; // Return an object with authentication status and error message\r\n  }\r\n}\r\n\r\nexport default validateUser;"],"mappings":"AAAA,cAAe,CAAAA,YAAYA,CAACC,QAAQ,CAAEC,QAAQ,CAAE,CAC9C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,YAAY,CAAE,CACzCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAoB;AACtC,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,QAAQ,CAAEC,QAAS,CAAC,CAAG;AAChD,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB;AACA,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC,CAC3D,CAEA,MAAO,MAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAE;AAEhC,CAAE,MAAOC,KAAK,CAAE,CACd;AACAC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAACE,OAAO,CAAC,CAChE,MAAO,CAAEC,aAAa,CAAE,KAAK,CAAED,OAAO,CAAEF,KAAK,CAACE,OAAQ,CAAC,CAAE;AAC3D,CACF,CAEA,cAAe,CAAAhB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}