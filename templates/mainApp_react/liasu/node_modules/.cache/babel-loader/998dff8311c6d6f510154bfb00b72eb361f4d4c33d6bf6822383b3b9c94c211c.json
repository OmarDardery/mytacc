{"ast":null,"code":"import React,{useState}from'react';import Form from'./component/form';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const validateStudentId=async studentId=>{try{const response=await fetch(`/api/students/${studentId}/validate/`,{method:'GET',// GET request\nheaders:{'Content-Type':'application/json'// Let the backend know you're sending JSON data\n}});if(!response.ok){// If HTTP response is not OK (status is not 2xx)\nthrow new Error(`HTTP error! Status: ${response.status}`);}const data=await response.json();// Parse JSON response\nif(data.status==='success'){console.log('Validation successful:',data.message);}else{console.error('Validation failed:',data.message);}}catch(error){// Handle network or other errors\nconsole.error('Error during validation request:',error.message);}};let[action,setAction]=useState(\"signup\");return/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(Form,{action:action,csrf:csrfToken})});}export default App;","map":{"version":3,"names":["React","useState","Form","jsx","_jsx","App","validateStudentId","studentId","response","fetch","method","headers","ok","Error","status","data","json","console","log","message","error","action","setAction","style","textAlign","children","csrf","csrfToken"],"sources":["C:/student-database/templates/liasu/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Form from './component/form';\n\nfunction App() {\n    const validateStudentId = async (studentId) => {\n      try {\n        const response = await fetch(`/api/students/${studentId}/validate/`, {\n          method: 'GET', // GET request\n          headers: {\n            'Content-Type': 'application/json', // Let the backend know you're sending JSON data\n          },\n        });\n\n        if (!response.ok) {\n          // If HTTP response is not OK (status is not 2xx)\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json(); // Parse JSON response\n        if (data.status === 'success') {\n          console.log('Validation successful:', data.message);\n        } else {\n          console.error('Validation failed:', data.message);\n        }\n      } catch (error) {\n        // Handle network or other errors\n        console.error('Error during validation request:', error.message);\n      }\n    };\n\n    let [action, setAction] = useState(\"signup\");\n    return (\n    <div style={{ textAlign: 'center' }}>\n      <Form action = {action} csrf = {csrfToken} />\n    </div>\n    );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,CAAAC,IAAI,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAAAC,iBAAiB,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iBAAiBF,SAAS,YAAY,CAAE,CACnEG,MAAM,CAAE,KAAK,CAAE;AACfC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAoB;AACtC,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB;AACA,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC,CAC3D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAE;AACpC,GAAID,IAAI,CAACD,MAAM,GAAK,SAAS,CAAE,CAC7BG,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEH,IAAI,CAACI,OAAO,CAAC,CACrD,CAAC,IAAM,CACLF,OAAO,CAACG,KAAK,CAAC,oBAAoB,CAAEL,IAAI,CAACI,OAAO,CAAC,CACnD,CACF,CAAE,MAAOC,KAAK,CAAE,CACd;AACAH,OAAO,CAACG,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAACD,OAAO,CAAC,CAClE,CACF,CAAC,CAED,GAAI,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGrB,QAAQ,CAAC,QAAQ,CAAC,CAC5C,mBACAG,IAAA,QAAKmB,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAC,QAAA,cAClCrB,IAAA,CAACF,IAAI,EAACmB,MAAM,CAAIA,MAAO,CAACK,IAAI,CAAIC,SAAU,CAAE,CAAC,CAC1C,CAAC,CAEV,CAEA,cAAe,CAAAtB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}