{"ast":null,"code":"const validateStudentId = async email => {\n  try {\n    const response = await fetch(`/api/send-code/${email}/`, {\n      method: 'GET',\n      // GET request\n      headers: {\n        'Content-Type': 'application/json' // Let the backend know you're sending JSON data\n      }\n    });\n    if (!response.ok) {\n      // If HTTP response is not OK (status is not 2xx)\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json(); // Parse JSON response\n    return data.message;\n  } catch (error) {\n    // Handle network or other errors\n    console.error('Error during validation request:', error.message);\n  }\n  return false; // Return false if validation fails or an error occurs\n};\nexport default validateStudentId;","map":{"version":3,"names":["validateStudentId","email","response","fetch","method","headers","ok","Error","status","data","json","message","error","console"],"sources":["C:/mytacc/templates/mainApp/liasu/src/component/functions/sendCode.js"],"sourcesContent":["const validateStudentId = async (email) => {\r\n  try {\r\n    const response = await fetch(`/api/send-code/${email}/`, {\r\n      method: 'GET', // GET request\r\n      headers: {\r\n        'Content-Type': 'application/json', // Let the backend know you're sending JSON data\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      // If HTTP response is not OK (status is not 2xx)\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json(); // Parse JSON response\r\n    return data.message;\r\n  } catch (error) {\r\n    // Handle network or other errors\r\n    console.error('Error during validation request:', error.message);\r\n  }\r\n  return false; // Return false if validation fails or an error occurs\r\n};\r\n\r\nexport default validateStudentId;"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkBF,KAAK,GAAG,EAAE;MACvDG,MAAM,EAAE,KAAK;MAAE;MACfC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB,CAAE;MACtC;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB;MACA,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC;IAC3D;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,OAAOD,IAAI,CAACE,OAAO;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACD,OAAO,CAAC;EAClE;EACA,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AAED,eAAeX,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}